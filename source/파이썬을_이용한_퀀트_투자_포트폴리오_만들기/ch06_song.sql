### MySQL에서 upsert 기능 구현하기

use exam;

CREATE TABLE price_2(
  날짜 varchar(10), 
  티커 varchar(6),
  종가 int,
  거래량 int,
  PRIMARY KEY(날짜, 티커)
);

-- 총 4개 열(날짜, 티커, 종가, 거래량)으로 구성되어 있으며 날짜와 티커별로 종가와 거래량이 다르므로 날짜와 티커를 기본 키로 지정한다. 
-- 이제 테이블에 값을 넣어보도록 하자. 
insert into price_2 (날짜, 티커, 종가, 거래량)
values
('2021-01-02', '000001', 1340, 1000),
('2021-01-03', '000001', 1315, 2000),
('2021-01-02', '000002', 500, 200);

select * from price_2;

-- 000001 종목은 1월 2일과 3일 모두 데이터가 입력되었지만, 000002 종목은 1월 2일 데이터만 입력되었다. 
-- upsert 기능을 이용해 데이터를 추가해보도록 하자.
INSERT INTO price_2 (날짜, 티커, 종가, 거래량)
VALUES
('2021-01-02', '000001', 1340, 1000),
('2021-01-03', '000001', 1315, 2000),
('2021-01-02', '000002', 500, 200),
('2021-01-03', '000002', 1380, 3000)
ON DUPLICATE KEY UPDATE
종가 = VALUES(종가), 거래량 = VALUES(거래량);

-- 데이터를 입력하되, 키 값(날짜, 티커)을 기준으로 이미 데이터가 존재할 경우에는 입력이 아닌 업데이트를 해준다. 
-- 000001 종목의 1월 2~3일, 000002 종목의 1월 2일 데이터는 이미 존재하며 데이터가 바뀌지 않아 값이 그대로 유지된다. 
-- 반면 000002 종목의 1월 3일 데이터는 기존에 없던 값이기에 새롭게 추가된다.
select * from price_2;

-- 입력과 업데이트를 동시에 진행
INSERT INTO price_2 (날짜, 티커, 종가, 거래량)
VALUES
('2021-01-02', '000001', 1300, 1100),
('2021-01-04', '000001', 1300, 2000)
ON DUPLICATE KEY UPDATE
종가 = VALUES(종가), 거래량 = VALUES(거래량);
select * from price_2;


